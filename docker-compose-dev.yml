version: '3'
services:
  gamezi.develop:
    build:
      context: .
      dockerfile: docker/dev/Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: sail-8.1/app
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${APP_PORT:-8000}:8000'
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
    volumes:
      - '/var/www/vendor'
      - '.:/var/www/html'
    networks:
      - gamezi-net
    depends_on:
      - mysql
      - redis
  mysql:
    image: mysql:oracle
    command: --default-authentication-plugin=mysql_native_password
    restart: on-failure
    ports:
      - "${DB_PORT:-3306}:3306"
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: "${DB_DATABASE:-gamezi_db}"
      MYSQL_PORT: "${DB_PORT:-3306}"
      MYSQL_USERNAME: "${DB_USERNAME:-admin}"
      MYSQL_PASSWORD: "${DB_PASSWORD:-secret}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD:-secret}"
    networks:
      - gamezi-net
    volumes:
      - gamezi_db:/var/lib/mysql/
  mysql-test:
    image: mysql:oracle
    command: --default-authentication-plugin=mysql_native_password
    restart: on-failure
    ports:
      - "33070:3306"
    environment:
      MYSQL_DATABASE: "test"
      MYSQL_PORT: "3306"
      MYSQL_USERNAME: "admin"
      MYSQL_PASSWORD: "testpass"
      MYSQL_ROOT_PASSWORD: "testpass"
    networks:
      - gamezi-net

  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'gamezi_redis:/data'
    networks:
      - gamezi-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s

  minio:
    image: 'minio/minio:latest'
    ports:
      - '${FORWARD_MINIO_PORT:-9000}:9000'
      - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
      MINIO_SERVER_URL: ${MINIO_SERVER_URL}
    volumes:
      - 'gamezi_minio:/data/minio'
    networks:
      - gamezi-net
    command: minio server /data/minio --console-address ":8900"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      retries: 3
      timeout: 5s

networks:
  gamezi-net:
    driver: bridge
volumes:
  gamezi_db:
    driver: local
  gamezi_minio:
    driver: local
  gamezi_redis:
    driver: local
